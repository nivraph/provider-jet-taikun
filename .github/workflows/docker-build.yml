name: Docker Image CI

on:
  push:
    tags:
      - v*
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "raphidock"
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitLab
        uses: docker/login-action@v2
        with:
          registry: registry.cri.epita.fr/raphael.nivault
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}
      -
        name: General Setup
        run: |
          sudo apt-get update && \
          sudo apt-get install -yy -q --no-install-recommends \
          build-essential \
          ca-certificates \
          curl \
          git \
          jq \
          lsb-release \
          make \
          wget \
          sudo && \
          sudo apt-get update && \
          sudo apt-get upgrade -y && \
          sudo apt-get autoremove -y && \
          sudo apt-get clean
      -
        name: Docker Install
        run: |
          sudo apt install runc
          sudo apt install containerd
          sudo apt-get install docker.io -y
          sudo snap install docker
          sudo systemctl status docker
      -
        name: Go Set up
        run: |
          GO_VERSION=1.17.5 && \
          GO_HASH=bd78114b0d441b029c8fe0341f4910370925a4d270a6a590668840675b0c653e && \
          curl -fsSL https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz -o golang.tar.gz && \
          echo "${GO_HASH}  golang.tar.gz" | sha256sum -c - && \
          sudo tar -C /usr/local -xzf golang.tar.gz && \
          rm golang.tar.gz
          PATH=/usr/local/go/bin:$PATH
      -
        name: "Set latest tag"
        id: set-latest-tag
        run: |
          echo "latest_tag=$(git tag | sort --version-sort | tail -n1)" >> $GITHUB_ENV
          echo "LATEST_TAG = ${{ env.latest_tag }}"
      -
        name: Build and Push provider's images
        run: |
          echo "latest_tag=$(git tag | sort --version-sort | tail -n1)" >> $GITHUB_ENV
          git clone https://github.com/nivraph/provider-jet-taikun.git
          cd provider-jet-taikun
          make submodules
          sudo make build BUILD_REGISTRY=registry.cri.epita.fr/raphael.nivault
          sudo docker push registry.cri.epita.fr/raphael.nivault/provider-jet-taikun-amd64:${{ env.latest_tag }}
          
